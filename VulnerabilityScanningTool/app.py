
from flask import Flask, render_template, request
import socket, requests, json, argparse

app = Flask(__name__)

# Load known vulnerabilities and software versions
def load_vulnerabilities():
    with open('vulnerabilities.json') as file:
        return json.load(file)

# Port scanning function
def scan_ports(target):
    open_ports = []
    try:
        for port in range(1, 1025):  # Scanning ports 1 through 1024
            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            sock.settimeout(0.5)
            result = sock.connect_ex((target, port))
            if result == 0:
                open_ports.append(int(port))  # Append port as an integer
            sock.close()
    except socket.gaierror:
        return "Error: Invalid IP address or domain. Please check the input."
    except Exception as e:
        return f"Error: {str(e)}"
    
    return open_ports  # Return the list of open ports as integers



# Vulnerability scanning
def check_vulnerabilities(ports):
    vulnerabilities = load_vulnerabilities()
    result = {}
    for port in ports:
        service = socket.getservbyport(port, 'tcp')
        if service in vulnerabilities:
            result[port] = vulnerabilities[service]
        else:
            result[port] = "No known vulnerabilities"
    return result

@app.route("/", methods=["GET", "POST"])
def home():
    result = None
    if request.method == "POST":
        target = request.form["target"]
        open_ports = scan_ports(target)
        result = check_vulnerabilities(open_ports)
    return render_template("index.html", result=result)

if __name__ == "__main__":
    app.run(debug=True)
